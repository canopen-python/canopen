[build-system]
requires = ["setuptools>=69", "wheel", "setuptools_scm>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "canopen"
authors = [
    {name = "Christian Sandberg", email = "christiansandberg@me.com"},
    {name = "André Colomb", email = "src@andre.colomb.de"},
    {name = "André Filipe Silva", email = "afsilva.work@gmail.com"},
]
description = "CANopen stack implementation"
readme = "README.rst"
requires-python = ">=3.8"
license = {file = "LICENSE.txt"}
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Intended Audience :: Developers",
    "Topic :: Scientific/Engineering",
]
dependencies = [
    "python-can >= 3.0.0",
]
dynamic = ["version"]

[project.optional-dependencies]
db_export = [
    "canmatrix ~= 1.0",
]

[project.urls]
documentation = "https://canopen.readthedocs.io/en/stable/"
repository = "https://github.com/canopen-python/canopen"

[tool.setuptools]
packages = ["canopen"]

[tool.setuptools_scm]
version_file = "canopen/_version.py"

[tool.pytest.ini_options]
testpaths = [
    "test",
]
filterwarnings = [
    "ignore::DeprecationWarning",
]

[tool.black]
line-length = 88
target-version = ['py38']

[tool.isort]
profile = "black"
line_length = 88

[tool.ruff]
line-length = 88
target-version = "py38"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "F",  # Pyflakes errors (undefined names, unused imports/variables)
    "W",  # pycodestyle warnings
    "B",  # flake8-bugbear (potential logic errors/style issues)
    "C4",  # flake8-comprehensions (unnecessary list/set/dict comprehensions)
    "SIM",  # flake8-simplify (opportunities to simplify code)
    "UP",  # pyupgrade (syntax upgrades for newer Python versions)
]
ignore = [
    "I",  # isort
    "E501",  # Line too long, handled by black
]

[tool.ruff.lint.per-file-ignores]
# temporal ignores, to be removed once we figure out how to refactor code
"canopen/objectdictionary/__init__.py" = [
    "F403",  # unable to detect undefined names
    "F405",  # variable defined from star imports
    "SIM115",  # context manager for opening files
]
"canopen/objectdictionary/eds.py" = [
    "SIM115",  # context manager for opening files
]
"canopen/sdo/client.py" = [
    "F403",  # unable to detect undefined names
    "F405",  # variable defined from star imports
    "SIM102",  # nested `if` statements
]
"canopen/sdo/server.py" = [
    "F403",  # unable to detect undefined names
    "F405",  # variable defined from star imports
]
"test/test_eds.py" = [
    "SIM117",  # nested with statements
]
"test/test_local.py" = [
    "SIM117",  # nested with statements
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
